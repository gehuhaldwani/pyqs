---
import type { HTMLAttributes } from "astro/types";
import { tv } from "tailwind-variants";

type Props = Omit<HTMLAttributes<"button">, "role" | "type"> & {
	/**
	 * When true, the component will render its child element with a simple wrapper instead of a button component
	 */
	asChild?: boolean;
};

const dropdownTrigger = tv({
	base: [
		"starwind-dropdown-trigger",
		"inline-flex items-center justify-center",
		"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring",
	],
});

const { class: className, asChild = false, ...rest } = Astro.props;

// Get the first child element if asChild is true
let hasChildren = false;
if (Astro.slots.has("default")) {
	hasChildren = true;
}
---

{
	asChild && hasChildren ? (
		<div class="starwind-dropdown-trigger" data-as-child>
			<slot />
		</div>
	) : (
		<button
			class={dropdownTrigger({ class: className })}
			type="button"
			role="button"
			aria-haspopup="true"
			aria-expanded="false"
			data-state="closed"
			{...rest}
		>
			<slot />
		</button>
	)
}
