---
import type { HTMLAttributes } from "astro/types";
import { tv, type VariantProps } from "tailwind-variants";

type Props = HTMLAttributes<"div"> & VariantProps<typeof alert>;

export const alert = tv({
  base: "text-foreground relative w-full rounded-lg border p-4",
  variants: {
    variant: {
      default: "bg-background dark:bg-input/30 [&>h5>svg]:text-foreground",
      primary: "border-primary bg-primary/7 [&>h5>svg]:text-primary",
      secondary: "border-secondary bg-secondary/7 [&>h5>svg]:text-secondary",
      info: "border-info bg-info/7 [&>h5>svg]:text-info",
      success: "border-success bg-success/7 [&>h5>svg]:text-success",
      warning: "border-warning bg-warning/7 [&>h5>svg]:text-warning",
      error: "border-error bg-error/7 [&>h5>svg]:text-error",
    },
  },
  defaultVariants: { variant: "default" },
});

const { variant, class: className, ...rest } = Astro.props;

const inferredRole =
  rest.role ?? (variant === "error" || variant === "warning" ? "alert" : "status");
---

<div class={alert({ variant, class: className })} data-slot="alert" role={inferredRole} {...rest}>
  <slot />
</div>
